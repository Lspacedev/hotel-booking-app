#React Hotel Booking App

Problem: Create an app that allows users to book hotel rooms, using Firestore.
    It should have 8 main pages:
    1. Login Page
    2. Registration Page
    3. Landing Page
    4. User Profile Page
    5. Admin Profile Page
    6. User Dashboard.
    7. Admin Dashboard.
    8. Checkout page.


Requirements: 
    Registration information:
    1. Name.
    2. Surname.
    3. Email.
    4. Password.
    5. Profile picture.
    ** Must encrypt login credentials after registration.
    ** Must use redux for state management.

    User interface:
    1. Allow users to view, add/book hotel rooms.
    2. The user should be able to view and update their details - Profile Page.
    3. Use protected routing - authentication.

    Admin interface:
    1. Allow admin to view, add, update hotel rooms/accomodations.
    2. The admin should be able to view and update their details - Profile Page.
    3. Use protected routing - authentication.

    Accomodation inputs:
    1. Photo Gallery of the hotel.
    2. Location of the hotel.
    3. Price.
    4. Address
    5. Rating.
    6. Amenities offered and policies.


    ** Users must be able to share hotel room details with others


    Features:
    User must be able to:
    1. View booked room.
    2. Filter rooms by name of location, price and etc.
    ** Must be able to search and sort using URL.

    Admin must be able to:
    1. Add new room.
    2. View added rooms.
    3. Update added room.
    4. Delete rooms.

    5. Approve reservations.
    6. Modify reservations.
    7. Cancel reservations.

Database structure:
    Collections:
        User data:
            Rooms, history, favourites, reviews.
        Admin data:
            Accomodations, reservations, hotels.
    
    Documents:
        User data:
            Room: id, name, status, status, paid.
            History: hotel id, room id.
            favourite: hotel id, room id, pic. 
            review: profile pic, review text.
        Admin data:
            Accomodation: pic, details, room id, hotel id.
            reservation: room id, hotel id, status, paid.
            hotel: name, id, pic.
    
Solution: 
    1. Create Registration Page to gather user login credentials.
    2. Store user data to firestore database.
    3. Create Login Page to access User Dashboard using registered username and password, after validation.
    4. Use username and other user info to render Profile Page.
    5. Create Landing Page to allow users to search accomodations.
    6. Create page for each individual accomodations with more details.
    
    7. Create Admin Dashboard.


    Functions:
    User:
        1. AddUser - function to add user.
        2. UserUpdate - function to update user information.
    
    Admin:
        1. Add - function to add accomodations.
        5. UpdateAccomodation - function to update accomodation information.
        6. DeleteAccomodation - function to delete accomodation.

    10. FilterAccomodation - function to filter accomodations.

    Components:
    1. HomePage - component with home page information.
    2. RegistrationPage - component to get user information.
    3. LoginPage - component to log in.
    4. ResultsPage - component with room search results.

    User:
    1. Profile - component with user profile information.
    2. Bookings - component with approved bookings.
    3. Reservations - component with pending bookings.
    4. History - component with user history.
    5. Favourites -  component with user favourites.
    6. Reviews -  component with user reviews.

    Admin:
    1. AddAccomodation - component to enter accomodation information.
    2. Accomodations - displays accomodations on page.
    3. SearchAccomodations - used to filter accomodations by location, price, date and etc.
    4. AccomodationCard - component to show individual accomodation card.

